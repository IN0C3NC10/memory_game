unit untJogoMemória;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Imaging.jpeg,
  Vcl.Imaging.pngimage;

type
  TfrmJogo = class(TForm)
    imgMystic1: TImage;
    imgWar1: TImage;
    imgTerror2: TImage;
    imgMachi2: TImage;
    imgWar2: TImage;
    imgMarauder1: TImage;
    imgSlaughter1: TImage;
    imgDark2: TImage;
    imgOutlaw1: TImage;
    imgMachi1: TImage;
    imgSlaughter2: TImage;
    imgOutlaw2: TImage;
    imgMarauder2: TImage;
    imgAtroz2: TImage;
    imgMystic2: TImage;
    imgTerror1: TImage;
    imgAtroz1: TImage;
    imgBackground: TImage;
    imgMystic1I: TImage;
    imgDark1: TImage;
    imgWar1I: TImage;
    imgDark1I: TImage;
    imgTerror1I: TImage;
    imgAtroz2I: TImage;
    imgOutlaw1I: TImage;
    imgTerror2I: TImage;
    imgSlaughter1I: TImage;
    imgMarauder1I: TImage;
    imgMachi2I: TImage;
    imgDark2I: TImage;
    imgAtroz1I: TImage;
    imgMystic2I: TImage;
    imgSlaughter2I: TImage;
    imgWar2I: TImage;
    imgMachi1I: TImage;
    imgMarauder2I: TImage;
    imgOutlaw2I: TImage;

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmJogo: TfrmJogo;
  limite, npares: integer;
  vnome1, vnome2: string;
  //se a img esta aberta ou fechada
  status: boolean;

implementation

{$R *.dfm}



end.
